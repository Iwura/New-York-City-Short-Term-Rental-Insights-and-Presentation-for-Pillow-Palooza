--What is the most common room type in NYC Airbnb listings?
SELECT room_type,
 Count(*)
FROM prices AS p
JOIN reviews AS rv
ON p.listing_id = rv.listing_id
JOIN room_types AS rt
ON p.listing_id = rt.listing_id
GROUP BY 1
ORDER BY 2 DESC;
--What is the average price of a listing by room type?
SELECT room_type,
 Avg(price)
FROM prices AS p
JOIN reviews AS rv
ON p.listing_id = rv.listing_id
JOIN room_types AS rt
ON p.listing_id = rt.listing_id
GROUP BY 1
ORDER BY 2 DESC;
--Which borough has the highest average price per month?
SELECT p.borough,
 Avg(p.price_per_month)
FROM prices AS p
JOIN reviews AS rv
ON p.listing_id = rv.listing_id
JOIN room_types AS rt
ON p.listing_id = rt.listing_id
GROUP BY 1
ORDER BY 2 DESC;
--How many listings of each room type are in each borough?
SELECT p.borough,
 rt.room_type,
 Count(*)
FROM prices AS p
JOIN reviews AS rv
ON p.listing_id = rv.listing_id
JOIN room_types AS rt
ON p.listing_id = rt.listing_id
GROUP BY 1, 2;
--How many listings in each room type category have a price of over $5
00 per night?
SELECT rt.room_type,
 Count(*)
FROM prices AS p
JOIN reviews AS rv
ON p.listing_id = rv.listing_id
JOIN room_types AS rt
ON p.listing_id = rt.listing_id
WHERE p.price > 500
GROUP BY 1;
--What is the distribution of listing prices by neighborhood?
SELECT p.borough,
 Min(p.price),
 Max(p.price),
 Avg(p.price)
FROM prices AS p
JOIN reviews AS rv
ON p.listing_id = rv.listing_id
JOIN room_types AS rt
ON p.listing_id = rt.listing_id
GROUP BY 1;
--What is the estimated amount of revenue generated by hosts in each b
orough?
SELECT borough,
 Sum(price * booked_days_365) AS revenue_generated
FROM reviews AS rv
JOIN prices AS p
ON rv.listing_id = p.listing_id
GROUP BY 1;
--What is the average price per month for listings in each neighborhoo
d?
SELECT p.neighbourhood,
 rt.room_type,
 Avg(p.price_per_month)
FROM prices AS p
JOIN room_types AS rt
ON p.listing_id = rt.listing_id
GROUP BY 1, 2;
--How many listings have no reviews?
SELECT Count(*)
FROM prices AS p
JOIN reviews AS rv
ON p.listing_id = rv.listing_id
WHERE rv.number_of_reviews = 0;
--How do the estimated book days correlate with the price of an Airbnb
listing in New York City?
SELECT Corr(p.price, rv.booked_days_365) AS correlation_coe
fficient
FROM prices AS p
JOIN reviews AS rv
ON p.listing_id = rv.listing_id
JOIN room_types AS rt
ON p.listing_id = rt.listing_id;
--What is the average price per room type for listings that have at le
ast 100 reviews and are available more than 200 days a year?
SELECT rt.room_type,
 Round(Avg(p.price), 2) AS average_price_per_room
FROM prices AS p
JOIN reviews AS rv
ON p.listing_id = rv.listing_id
JOIN room_types AS rt
ON p.listing_id = rt.listing_id
WHERE rv.number_of_reviews > 100
AND rv.availability_365 > 200
GROUP BY 1;
--How many hosts have more than one listing, and what's the maximum nu
mber of listings by a single host name?
SELECT host_name,
 Count(*) AS number_of_listings
FROM reviews
GROUP BY 1
ORDER BY 2 DESC
with t1 AS
 ( SELECT host_name,
 count(*) AS number_of_listings
 FROM reviews
 GROUP BY 1
 ORDER BY 2 DESC)
SELECT Count(t1.host_name) AS number_of_host_names_with_more_than_1_
listing
FROM t1
WHERE t1.number_of_listings > 1;
 --Determine the top 5 hosts who have the highest price_per_month for t
heir listings, considering only hosts who have at least 10 listings
with t1 AS
 (
 SELECT host_name,
 count(*) AS number_of_listings
 FROM reviews
 GROUP BY 1
 HAVING count(*) > 10
 ORDER BY 2 DESC),
 t2 AS
 (
 SELECT *
 FROM prices AS p
 JOIN reviews AS rv
 ON p.listing_id = rv.listing_id)
SELECT t1.host_name,
 t2.price_per_month
FROM t1
JOIN t2
ON t1.host_name = t2.host_name
ORDER BY 2 DESC limit 5;
--Find the neighborhood(s) that have the highest variance in listing p
rices
SELECT neighbourhood,
 Variance(price) AS listing_price_variance
FROM prices
GROUP BY 1
ORDER BY 2 DESC;
--Calculate the average price_per_month for each neighborhood, conside
ring only listings where the host has a minimum_nights value that is
higher than the average minimum_nights value across all listings
 
with t1 AS
 (
 SELECT avg(minimum_nights)
 FROM reviews)
SELECT p.neighbourhood,
 Avg(p.price_per_month)
FROM prices AS p
JOIN reviews AS rv
ON p.listing_id = rv.listing_id
WHERE rv.minimum_nights > (SELECT t1.avg FROM t1)
GROUP BY 1;
